package algorithms.search;

import org.junit.Test;

import algorithms.demo.MazeSearch;
import algorithms.mazeGenerator.Cell;
import algorithms.mazeGenerator.DFSMazeGenerator;
import algorithms.mazeGenerator.Maze;
import algorithms.mazeGenerator.MazeGenerator;

public class AStarJUnitTest  {

	Heuristic h;
	@Test
public void test() {
	System.out.println("The Maze:");
	MazeGenerator mg=new DFSMazeGenerator(); // my choice of algorithm
	Maze m =mg.generateMaze(10, 10,new Cell(13,8) );
	m.print();
	System.out.println("\nSolution A* without diagonals");
	MazeSearch ams1 = new MazeSearch(m,false);
	MazaManhattanHeuristic heur = new MazaManhattanHeuristic();
	AStar sol5 = new AStar(heur);
	sol5.setH(new MazaManhattanHeuristic());
	Solution sol16 = sol5.search(ams1);
	sol16.displaySolution();
	System.out.println("\nSolution A* with diagonals");
	MazeSearch ams2 = new MazeSearch(m,true);
	MazeAirHeuristic hur = new MazeAirHeuristic();
	AStar sol7 = new AStar(hur);
	sol7.setH(new MazeAirHeuristic());
	Solution sol8 = sol7.search(ams2);
	sol8.displaySolution();
}

}
